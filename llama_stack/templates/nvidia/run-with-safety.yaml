version: 2
image_name: nvidia
apis:
- agents
- datasetio
- eval
- inference
- post_training
- safety
- scoring
- telemetry
- tool_runtime
- vector_io
providers:
  inference:
  - provider_id: nvidia
    provider_type: remote::nvidia
    config:
      url: ${env.NVIDIA_BASE_URL:=https://integrate.api.nvidia.com}
      api_key: ${env.NVIDIA_API_KEY:=}
      append_api_version: ${env.NVIDIA_APPEND_API_VERSION:=True}
  - provider_id: nvidia
    provider_type: remote::nvidia
    config:
      guardrails_service_url: ${env.GUARDRAILS_SERVICE_URL:=http://localhost:7331}
      config_id: ${env.NVIDIA_GUARDRAILS_CONFIG_ID:=self-check}
  vector_io:
  - provider_id: faiss
    provider_type: inline::faiss
    config: ~/.llama/distributions/nvidia/provider_configs/vector_io/faiss.yaml
  safety:
  - provider_id: nvidia
    provider_type: remote::nvidia
    config: ~/.llama/distributions/nvidia/provider_configs/safety/nvidia.yaml
  agents:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config: ~/.llama/distributions/nvidia/provider_configs/agents/meta-reference.yaml
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config: ~/.llama/distributions/nvidia/provider_configs/telemetry/meta-reference.yaml
  eval:
  - provider_id: nvidia
    provider_type: remote::nvidia
    config:
      evaluator_url: ${env.NVIDIA_EVALUATOR_URL:=http://localhost:7331}
  post_training:
  - provider_id: nvidia
    provider_type: remote::nvidia
    config: ~/.llama/distributions/nvidia/provider_configs/post_training/nvidia.yaml
  datasetio:
  - provider_id: localfs
    provider_type: inline::localfs
    config: ~/.llama/distributions/nvidia/provider_configs/datasetio/localfs.yaml
  - provider_id: nvidia
    provider_type: remote::nvidia
    config: ~/.llama/distributions/nvidia/provider_configs/datasetio/nvidia.yaml
  scoring:
  - provider_id: basic
    provider_type: inline::basic
    config: {}
  tool_runtime:
  - provider_id: rag-runtime
    provider_type: inline::rag-runtime
    config: {}
metadata_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/nvidia}/registry.db
inference_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/nvidia}/inference_store.db
models:
- metadata: {}
  model_id: ${env.INFERENCE_MODEL}
  provider_id: nvidia
  model_type: llm
- metadata: {}
  model_id: ${env.SAFETY_MODEL}
  provider_id: nvidia
  model_type: llm
shields:
- shield_id: ${env.SAFETY_MODEL}
  provider_id: nvidia
vector_dbs: []
datasets: []
scoring_fns: []
benchmarks: []
tool_groups:
- toolgroup_id: builtin::rag
  provider_id: rag-runtime
server:
  port: 8321
