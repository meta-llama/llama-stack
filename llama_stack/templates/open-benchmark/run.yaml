version: 2
image_name: open-benchmark
apis:
- agents
- datasetio
- eval
- inference
- safety
- scoring
- telemetry
- tool_runtime
- vector_io
providers:
  inference:
  - provider_id: openai
    provider_type: remote::openai
    config:
      api_key: ${env.OPENAI_API_KEY:=}
    immutable: false
  - provider_id: anthropic
    provider_type: remote::anthropic
    config:
      api_key: ${env.ANTHROPIC_API_KEY:=}
    immutable: false
  - provider_id: gemini
    provider_type: remote::gemini
    config:
      api_key: ${env.GEMINI_API_KEY:=}
    immutable: false
  - provider_id: groq
    provider_type: remote::groq
    config:
      url: https://api.groq.com
      api_key: ${env.GROQ_API_KEY:=}
    immutable: false
  - provider_id: together
    provider_type: remote::together
    config:
      url: https://api.together.xyz/v1
      api_key: ${env.TOGETHER_API_KEY:=}
    immutable: false
  vector_io:
  - provider_id: sqlite-vec
    provider_type: inline::sqlite-vec
    config:
      db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/open-benchmark}/sqlite_vec.db
    immutable: false
  - provider_id: ${env.ENABLE_CHROMADB:+chromadb}
    provider_type: remote::chromadb
    config:
      url: ${env.CHROMADB_URL:=}
    immutable: false
  - provider_id: ${env.ENABLE_PGVECTOR:+pgvector}
    provider_type: remote::pgvector
    config:
      host: ${env.PGVECTOR_HOST:=localhost}
      port: ${env.PGVECTOR_PORT:=5432}
      db: ${env.PGVECTOR_DB:=}
      user: ${env.PGVECTOR_USER:=}
      password: ${env.PGVECTOR_PASSWORD:=}
    immutable: false
  safety:
  - provider_id: llama-guard
    provider_type: inline::llama-guard
    config:
      excluded_categories: []
    immutable: false
  agents:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      persistence_store:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/open-benchmark}/agents_store.db
      responses_store:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/open-benchmark}/responses_store.db
    immutable: false
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      service_name: "${env.OTEL_SERVICE_NAME:=\u200B}"
      sinks: ${env.TELEMETRY_SINKS:=console,sqlite}
      sqlite_db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/open-benchmark}/trace_store.db
    immutable: false
  eval:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      kvstore:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/open-benchmark}/meta_reference_eval.db
    immutable: false
  datasetio:
  - provider_id: huggingface
    provider_type: remote::huggingface
    config:
      kvstore:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/open-benchmark}/huggingface_datasetio.db
    immutable: false
  - provider_id: localfs
    provider_type: inline::localfs
    config:
      kvstore:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/open-benchmark}/localfs_datasetio.db
    immutable: false
  scoring:
  - provider_id: basic
    provider_type: inline::basic
    config: {}
    immutable: false
  - provider_id: llm-as-judge
    provider_type: inline::llm-as-judge
    config: {}
    immutable: false
  - provider_id: braintrust
    provider_type: inline::braintrust
    config:
      openai_api_key: ${env.OPENAI_API_KEY:=}
    immutable: false
  tool_runtime:
  - provider_id: brave-search
    provider_type: remote::brave-search
    config:
      api_key: ${env.BRAVE_SEARCH_API_KEY:=}
      max_results: 3
    immutable: false
  - provider_id: tavily-search
    provider_type: remote::tavily-search
    config:
      api_key: ${env.TAVILY_SEARCH_API_KEY:=}
      max_results: 3
    immutable: false
  - provider_id: rag-runtime
    provider_type: inline::rag-runtime
    config: {}
    immutable: false
  - provider_id: model-context-protocol
    provider_type: remote::model-context-protocol
    config: {}
    immutable: false
metadata_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/open-benchmark}/registry.db
inference_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/open-benchmark}/inference_store.db
models:
- metadata: {}
  model_id: openai/gpt-4o
  provider_id: openai
  provider_model_id: openai/gpt-4o
  model_type: llm
- metadata: {}
  model_id: anthropic/claude-3-5-sonnet-latest
  provider_id: anthropic
  provider_model_id: anthropic/claude-3-5-sonnet-latest
  model_type: llm
- metadata: {}
  model_id: gemini/gemini-1.5-flash
  provider_id: gemini
  provider_model_id: gemini/gemini-1.5-flash
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.3-70B-Instruct
  provider_id: groq
  provider_model_id: groq/llama-3.3-70b-versatile
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.1-405B-Instruct
  provider_id: together
  provider_model_id: meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo
  model_type: llm
shields:
- shield_id: meta-llama/Llama-Guard-3-8B
vector_dbs: []
datasets:
- purpose: eval/messages-answer
  source:
    type: uri
    uri: huggingface://datasets/llamastack/simpleqa?split=train
  metadata: {}
  dataset_id: simpleqa
- purpose: eval/messages-answer
  source:
    type: uri
    uri: huggingface://datasets/llamastack/mmlu_cot?split=test&name=all
  metadata: {}
  dataset_id: mmlu_cot
- purpose: eval/messages-answer
  source:
    type: uri
    uri: huggingface://datasets/llamastack/gpqa_0shot_cot?split=test&name=gpqa_main
  metadata: {}
  dataset_id: gpqa_cot
- purpose: eval/messages-answer
  source:
    type: uri
    uri: huggingface://datasets/llamastack/math_500?split=test
  metadata: {}
  dataset_id: math_500
- purpose: eval/messages-answer
  source:
    type: uri
    uri: huggingface://datasets/llamastack/bfcl_v3?split=train
  metadata: {}
  dataset_id: bfcl
- purpose: eval/messages-answer
  source:
    type: uri
    uri: huggingface://datasets/llamastack/IfEval?split=train
  metadata: {}
  dataset_id: ifeval
- purpose: eval/messages-answer
  source:
    type: uri
    uri: huggingface://datasets/llamastack/docvqa?split=val
  metadata: {}
  dataset_id: docvqa
scoring_fns: []
benchmarks:
- dataset_id: simpleqa
  scoring_functions:
  - llm-as-judge::405b-simpleqa
  metadata: {}
  benchmark_id: meta-reference-simpleqa
- dataset_id: mmlu_cot
  scoring_functions:
  - basic::regex_parser_multiple_choice_answer
  metadata: {}
  benchmark_id: meta-reference-mmlu-cot
- dataset_id: gpqa_cot
  scoring_functions:
  - basic::regex_parser_multiple_choice_answer
  metadata: {}
  benchmark_id: meta-reference-gpqa-cot
- dataset_id: math_500
  scoring_functions:
  - basic::regex_parser_math_response
  metadata: {}
  benchmark_id: meta-reference-math-500
- dataset_id: bfcl
  scoring_functions:
  - basic::bfcl
  metadata: {}
  benchmark_id: meta-reference-bfcl
- dataset_id: ifeval
  scoring_functions:
  - basic::ifeval
  metadata: {}
  benchmark_id: meta-reference-ifeval
- dataset_id: docvqa
  scoring_functions:
  - basic::docvqa
  metadata: {}
  benchmark_id: meta-reference-docvqa
tool_groups:
- toolgroup_id: builtin::websearch
  provider_id: tavily-search
- toolgroup_id: builtin::rag
  provider_id: rag-runtime
server:
  port: 8321
