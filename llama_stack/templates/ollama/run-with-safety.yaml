version: 2
image_name: ollama
apis:
- agents
- datasetio
- eval
- files
- inference
- post_training
- safety
- scoring
- telemetry
- tool_runtime
- vector_io
providers:
  inference:
  - provider_id: ollama
    provider_type: remote::ollama
    config:
      url: ${env.OLLAMA_URL:=http://localhost:11434}
      raise_on_connect_error: true
  vector_io:
  - provider_id: faiss
    provider_type: inline::faiss
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/ollama}/faiss_store.db
  safety:
  - provider_id: llama-guard
    provider_type: inline::llama-guard
    config: {}
  - provider_id: code-scanner
    provider_type: inline::code-scanner
    config: {}
  agents:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config: ~/.llama/distributions/ollama/provider_configs/agents/meta-reference.yaml
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config: ~/.llama/distributions/ollama/provider_configs/telemetry/meta-reference.yaml
  eval:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config: ~/.llama/distributions/ollama/provider_configs/eval/meta-reference.yaml
  datasetio:
  - provider_id: huggingface
    provider_type: remote::huggingface
    config: ~/.llama/distributions/ollama/provider_configs/datasetio/huggingface.yaml
  - provider_id: localfs
    provider_type: inline::localfs
    config: ~/.llama/distributions/ollama/provider_configs/datasetio/localfs.yaml
  scoring:
  - provider_id: basic
    provider_type: inline::basic
    config: {}
  - provider_id: llm-as-judge
    provider_type: inline::llm-as-judge
    config: {}
  - provider_id: braintrust
    provider_type: inline::braintrust
    config: ~/.llama/distributions/ollama/provider_configs/scoring/braintrust.yaml
  files:
  - provider_id: meta-reference-files
    provider_type: inline::localfs
    config:
      storage_dir: ${env.FILES_STORAGE_DIR:=~/.llama/distributions/ollama/files}
      metadata_store:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/ollama}/files_metadata.db
  post_training:
  - provider_id: huggingface
    provider_type: inline::huggingface
    config:
      checkpoint_format: huggingface
      distributed_backend: null
      device: cpu
  tool_runtime:
  - provider_id: brave-search
    provider_type: remote::brave-search
    config: ~/.llama/distributions/ollama/provider_configs/tool_runtime/brave-search.yaml
  - provider_id: tavily-search
    provider_type: remote::tavily-search
    config: ~/.llama/distributions/ollama/provider_configs/tool_runtime/tavily-search.yaml
  - provider_id: rag-runtime
    provider_type: inline::rag-runtime
    config: {}
  - provider_id: model-context-protocol
    provider_type: remote::model-context-protocol
    config: {}
  - provider_id: wolfram-alpha
    provider_type: remote::wolfram-alpha
    config: ~/.llama/distributions/ollama/provider_configs/tool_runtime/wolfram-alpha.yaml
metadata_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/ollama}/registry.db
inference_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/ollama}/inference_store.db
models:
- metadata: {}
  model_id: ${env.INFERENCE_MODEL}
  provider_id: ollama
  model_type: llm
- metadata: {}
  model_id: ${env.SAFETY_MODEL}
  provider_id: ollama
  model_type: llm
- metadata:
    embedding_dimension: 384
  model_id: all-MiniLM-L6-v2
  provider_id: ollama
  provider_model_id: all-minilm:latest
  model_type: embedding
shields:
- shield_id: ${env.SAFETY_MODEL}
  provider_id: llama-guard
- shield_id: CodeScanner
  provider_id: code-scanner
vector_dbs: []
datasets: []
scoring_fns: []
benchmarks: []
tool_groups:
- toolgroup_id: builtin::websearch
  provider_id: tavily-search
- toolgroup_id: builtin::rag
  provider_id: rag-runtime
- toolgroup_id: builtin::wolfram_alpha
  provider_id: wolfram-alpha
server:
  port: 8321
